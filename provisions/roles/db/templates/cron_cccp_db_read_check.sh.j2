#!/bin/bash

INPUT_DIR="{{ db_backup_nfs_path }}"

DBUSER="{{ db_user }}"
DBNAME="{{ db_name }}"
DBPASS="{{ db_pass }}"

PGIMAGE="{{ postgresql_image }}"

# find latest tar file in $INPUT_DIR first
LATEST=$(ls -Art $INPUT_DIR | grep cccp-pgdump.tar | tail -n 1)
# find its absolute path
LATEST_DUMP=$(find $INPUT_DIR -name $LATEST)

PGSERVERNAME="postgresql_restore"

function exit_on_non_zero
{
  if [[ $1 != 0]]; then
    echo $2
    # stop and remove the restore container
    echo "Removing $PGSERVERNAME container"
    docker stop $PGSERVERNAME && docker rm $PGSERVERNAME
    exit $1
  fi
}

echo "==================================================================="
echo "`date +'%F %T'` Starting restore test for  $LATEST_DUMP"
echo "-------------------------------------------------------------------"
echo "File to be tested is $LATEST_DUMP"

# run the server
echo "Running the postgresql server.."
docker run -d -v $INPUT_DIR:$INPUT_DIR --name $PGSERVERNAME -e "POSTGRESQL_DATABASE=$DBNAME" -e "POSTGRESQL_USER=$DBUSER" -e "POSTGRESQL_PASSWORD=$DBPASS" $PGIMAGE
exit_on_non_zero $? "Failed to run postgresql server for restore of $LATEST_DUMP."
echo "Wait for server to start up.."
sleep 10

echo "Restore $LATEST_DUMP dump file into $DBNAME database"
docker exec $PGSERVERNAME bash -c "pg_restore -d $DBNAME $LATEST_DUMP"
exit_on_non_zero $? "Failed to restore db using $LATEST_DUMP."
echo "Wait for restore to complete.."
sleep 5

echo "Check if tables exists in $DBNAME database after restore"
# check tables of restored database
docker exec -t $PGSERVERNAME bash -c "psql -U $DBUSER -c 'SELECT name FROM projects'"
exit_on_non_zero $? "Table projects does not exist in $LATEST_DUMP"

docker exec -t $PGSERVERNAME bash -c "psql -U $DBUSER -c 'SELECT name FROM container_images'"
exit_on_non_zero $? "Table container_images does not exist in $LATEST_DUMP"

docker exec -t $PGSERVERNAME bash -c "psql -U $DBUSER -c 'SELECT uuid FROM builds'"
exit_on_non_zero $? "Table builds does not exist in $LATEST_DUMP"

#if all is well, stop and remove the postgres container
docker stop $PGSERVERNAME && docker rm $PGSERVERNAME

echo "-------------------------------------------------------------------"
echo "`date +'%F %T'` Tested restoring $LATEST_DUMP."
echo "==================================================================="
