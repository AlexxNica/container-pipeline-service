- job:
    name: centos-container-pipeline-service-pre-build-{project_name}
    description: |
        Managed by Jenkins Job Builder, do not edit manually!
    node: container
    ci_project: container
    properties:
        - github:
            url: "{prebuild-source}"
    scm:
        - git:
            url: "{prebuild-source}"
            skip-tag: True
            git-tool: ci-git
            branches:
                - "{git_branch}"
    builders:
        - shell: |
            export CICO_API_KEY=$(cat ~/duffy.key )
            while true
            do
                cico_output=$(cico node get -f value -c ip_address -c comment)
                if [ $? -eq 0 ]; then
                    read CICO_hostname CICO_ssid <<< $cico_output
                    if  [ ! -z "$CICO_hostname" ]; then
                        # we got hostname from cico
                        break
                    fi
                    echo "'cico node get' succeed, but can't get hostname from output"
                fi
                if [ $n -gt 5 ]; then
                    # give up after 5 tries
                    echo "giving up on 'cico node get'"
                    exit 1
                fi
                echo "'cico node get' failed, trying again in 60s ($n/5)"
                n=$[$n+1]
                sleep 60
            done
            sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
            ssh_cmd="ssh $sshopts $CICO_hostname"
            $ssh_cmd yum -y install rsync
            rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
            $ssh_cmd -t "cd payload && {prebuild-script}"
            rtn_code=$?

            if [ $rtn_code -eq 0 ]; then
              rsync -e "ssh $sshopts" -Ha $CICO_hostname:payload $(pwd)/
              cico node done $CICO_ssid
            else
              # fail mode gives us 12 hrs to debug the machine
              curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
            fi
            rm -f .gitignore

      publishers:
        - git:
            push-only-if-success: true
            push-merge: true
            force-push: true
            branches:
              - branch:
                  remote: "{git_url}"
                  name: "{appid}-{jobid}-{desired_tag}"
